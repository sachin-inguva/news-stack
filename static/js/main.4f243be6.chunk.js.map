{"version":3,"sources":["HackerNews/styled.js","HackerNews/hnAxios.js","HackerNews/UserInfo.js","HackerNews/HNewsCard.js","HackerNews/index.js","Google/images/noimage.jpeg","Google/GoogleNews.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","styled","div","cols","min","max","StyledLink","a","attrs","rel","target","hnAxios","axios","create","baseURL","UserInfoCard","id","useQuery","get","getUserById","enabled","Boolean","data","isLoading","elevation","style","borderRadius","display","flexDirection","justifyContent","about","formatDistanceToNowStrict","created","karma","submitted","length","HNewsCard","score","getNewsById","isFetching","refetch","className","Classes","SKELETON","interactive","href","url","title","content","large","icon","text","onClick","minimal","alignContent","round","time","by","rightIcon","intent","topNews","HackerNews","size","topData","slice","map","GoogleNewsApi","useState","result","setResult","keyword","setKeyword","classes","makeStyles","card","maxWidth","height","marginLeft","marginRight","border","boxShadow","titleHead","borderBottom","fontWeight","color","grid","flexGrow","media","width","button","fontSize","useStyles","useEffect","console","log","articles","fetchData","article","item","xs","sm","md","lg","xl","Card","src","urlToImage","noImage","alt","CardContent","description","buildCard","method","onSubmit","e","preventDefault","term","value","name","autoComplete","type","Button","container","spacing","queryClient","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","App","Tabs","defaultActiveKey","Tab","eventKey","GoogleNews","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f243be6.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: ${({ cols = '1', min = '200px', max = '1fr' }) =>\n    `repeat(${cols}, minmax(${min}, ${max}))`};\n`\nexport const StyledLink = styled.a.attrs(() => ({\n  rel: 'noreferrer',\n  target: '_blank',\n}))`\n  line-height: 2;\n  word-spacing: 2px;\n  overflow-wrap: break-word;\n`\n","import axios from 'axios'\n\nexport const hnAxios = axios.create({\n  baseURL: 'https://hacker-news.firebaseio.com/v0/',\n})\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\nimport { Card, Spinner } from '@blueprintjs/core'\r\nimport { useQuery } from 'react-query'\r\nimport { formatDistanceToNowStrict } from 'date-fns'\r\n\r\nimport { hnAxios } from './hnAxios'\r\n\r\nconst getUserById = id => hnAxios.get(`user/${id}.json`)\r\n\r\nexport const UserInfoCard = ({ id }) => {\r\n  const { data, isLoading } = useQuery(`hn-user-${id}`, () => getUserById(id), {\r\n    enabled: Boolean(id),\r\n  })\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <Spinner />\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      elevation={2}\r\n      style={{\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-evenly',\r\n      }}\r\n    >\r\n      <p>\r\n        <strong>About:</strong> {data.data.about}\r\n      </p>\r\n      <p>\r\n        <strong>User since:</strong>{' '}\r\n        {formatDistanceToNowStrict(data.data.created * 1000)}\r\n      </p>\r\n      <p>\r\n        <strong>Karma:</strong> {data.data.karma}\r\n      </p>\r\n      <p>\r\n        <strong>Stories Submitted:</strong> {data.data.submitted.length}\r\n      </p>\r\n    </Card>\r\n  )\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\nimport {\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Tag,\r\n  Card,\r\n  Classes,\r\n  H5,\r\n} from '@blueprintjs/core'\r\nimport { Popover2, Tooltip2 } from '@blueprintjs/popover2'\r\nimport { useQuery } from 'react-query'\r\nimport { formatDistanceToNowStrict } from 'date-fns'\r\n\r\nimport { hnAxios } from './hnAxios'\r\nimport { StyledLink } from './styled'\r\nimport { UserInfoCard } from './UserInfo'\r\n\r\nconst getIntentByScore = score => {\r\n  if (score > 200 && score < 500) return 'warning'\r\n  else if (score > 500) return 'danger'\r\n  return 'none'\r\n}\r\n\r\nconst getNewsById = id => hnAxios.get(`item/${id}.json`)\r\n\r\nfunction HNewsCard({ id }) {\r\n  const { isLoading, isFetching, data, refetch } = useQuery(\r\n    `hn-${id}`,\r\n    () => getNewsById(id),\r\n    {\r\n      enabled: Boolean(id),\r\n    },\r\n  )\r\n\r\n  if (isLoading || isFetching) {\r\n    return (\r\n      <Card className={Classes.SKELETON} interactive>\r\n        loading..\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card style={{ borderRadius: 10 }} interactive>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <H5>\r\n          <StyledLink href={data.data.url}>{data.data.title}</StyledLink>\r\n        </H5>\r\n        <Popover2\r\n          content={\r\n            <Menu large>\r\n              <MenuItem icon=\"refresh\" text=\"refetch\" onClick={refetch} />\r\n            </Menu>\r\n          }\r\n        >\r\n          <Button icon=\"more\" minimal />\r\n        </Popover2>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <div style={{ display: 'flex', alignContent: 'center' }}>\r\n          <Tag icon=\"time\" round minimal>\r\n            {formatDistanceToNowStrict(data.data.time * 1000)}\r\n          </Tag>\r\n          <Tooltip2 content={<UserInfoCard id={data.data.by} />}>\r\n            <Tag minimal round interactive rightIcon=\"user\">\r\n              {data.data.by}\r\n            </Tag>\r\n          </Tooltip2>\r\n        </div>\r\n        <Tag\r\n          minimal\r\n          round\r\n          icon=\"flame\"\r\n          intent={getIntentByScore(data.data.score)}\r\n        >\r\n          {data.data.score}\r\n        </Tag>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default HNewsCard\r\n","import React from 'react'\n\nimport { useQuery } from 'react-query'\nimport { Spinner } from '@blueprintjs/core'\n\nimport { Grid } from './styled'\nimport { hnAxios } from './hnAxios'\nimport NewsCard from './HNewsCard'\n\nconst topNews = () => hnAxios.get('topstories.json')\n\nexport default function HackerNews() {\n  const { data = [], isLoading } = useQuery(['hn-topstories'], topNews, {})\n\n  if (isLoading) {\n    return <Spinner size={40} />\n  }\n\n  const topData = data.data.slice(0, 50)\n\n  return (\n    <div>\n      <Grid>\n        {topData.map(id => (\n          <NewsCard key={id} id={id} />\n        ))}\n      </Grid>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/noimage.ac1b94f6.jpeg\";","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Button, Card, CardContent, Grid, makeStyles } from '@material-ui/core'\nimport noImage from './images/noimage.jpeg'\n\nfunction GoogleNewsApi() {\n  const [result, setResult] = useState([])\n  const [keyword, setKeyword] = useState('Hoboken')\n\n  const useStyles = makeStyles({\n    card: {\n      maxWidth: 250,\n      height: 'auto',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderRadius: 5,\n      border: '1px solid #1e8678',\n      boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n      borderBottom: '1px solid #1e8678',\n      fontWeight: 'bold',\n      color: 'black',\n    },\n    grid: {\n      flexGrow: 1,\n      flexDirection: 'row',\n    },\n    media: {\n      height: '300px',\n      width: '300px',\n    },\n    button: {\n      color: '#1e8678',\n      fontWeight: 'bold',\n      fontSize: 12,\n    },\n  })\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    async function fetchData() {\n      //  let keyword='Stevens Institute Of Technology';\n      try {\n        console.log('hi')\n        const { data } = await axios.get(\n          `https://newsapi.org/v2/everything?q=+${keyword}+&apiKey=5aa1805d7d0742469916d9c601a1ba49`,\n        )\n        setResult(data.articles)\n        console.log(result)\n      } catch (e) {\n        //   setLoading(true);\n        console.log(e)\n      }\n    }\n\n    fetchData()\n  }, [keyword])\n\n  const buildCard = article => {\n    return (\n      <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={article.content}>\n        <Card className={classes.card}>\n          <a target=\"_blank\" href={article.url} rel=\"noreferrer\">\n            <img\n              className={classes.media}\n              src={article.urlToImage ? article.urlToImage : noImage}\n              title=\"show image\"\n              alt=\"No Image\"\n            />\n\n            <CardContent>\n              <p className={classes.titleHead}>{article.title}</p>\n              <p>\n                {article.description ? article.description : 'No Description'}\n              </p>\n            </CardContent>\n          </a>\n        </Card>\n      </Grid>\n    )\n  }\n\n  let card =\n    result.length &&\n    result.map(article => {\n      return buildCard(article)\n    })\n\n  if (result.length > 0) {\n    return (\n      <div>\n        <h1>Top Headlines about {keyword}</h1>\n        <form\n          method=\"POST\"\n          onSubmit={e => {\n            console.log('test')\n            e.preventDefault()\n\n            setKeyword(e.target.term.value)\n            e.target.term.value = ''\n          }}\n          name=\"formName\"\n          className=\"center\"\n        >\n          <label>\n            <input autoComplete=\"off\" type=\"text\" name=\"term\" />\n            <Button type=\"submit\">Search</Button>\n          </label>\n        </form>\n\n        <Grid container className={classes.grid} spacing={5}>\n          {card}\n        </Grid>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    )\n  }\n}\n\nexport default GoogleNewsApi\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'normalize.css'\nimport '@blueprintjs/core/lib/css/blueprint.css'\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css'\n\n//import { Card } from '@blueprintjs/core'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport HackerNews from './HackerNews'\n//import Header from './Header'\nimport GoogleNews from './Google/GoogleNews'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n    },\n  },\n})\n\nfunction App() {\n  return (\n    <Tabs\n      defaultActiveKey=\"google\"\n      id=\"uncontrolled-tab-example\"\n      className=\"mb-3\"\n    >\n      <Tab eventKey=\"google\" title=\"Google News\">\n        <GoogleNews />\n      </Tab>\n      <Tab eventKey=\"hacker\" title=\"Hacker News\">\n        <QueryClientProvider client={queryClient}>\n          <HackerNews />\n        </QueryClientProvider>\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}